/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-2a4f2d00","./Check-e5651467","./freezeObject-a51e076f","./defaultValue-29c9b1af","./Math-7782f09e","./Cartesian2-ba70b51f","./defineProperties-c817531e","./Transforms-7d72c08c","./RuntimeError-51c34ab4","./WebGLConstants-90dbfe2f","./ComponentDatatype-418b1c61","./when-1faa3867","./AttributeCompression-5601f533","./IntersectionTests-59cef209","./Plane-b1ca737b","./WebMercatorProjection-1ecca5ba","./createTaskProcessorWorker","./EllipsoidTangentPlane-8dc9a637","./OrientedBoundingBox-656f9e92","./TerrainEncoding-9126cc77"],function(Fe,e,t,n,We,Oe,i,Ve,Ye,a,r,o,s,u,c,ke,h,Ue,He,Le){"use strict";var je=Uint16Array.BYTES_PER_ELEMENT,De=Int32Array.BYTES_PER_ELEMENT,Ge=Uint32Array.BYTES_PER_ELEMENT,ze=Float32Array.BYTES_PER_ELEMENT,qe=Float64Array.BYTES_PER_ELEMENT;function Je(e,t,i){i=n.defaultValue(i,We.CesiumMath);for(var a=e.length,r=0;r<a;++r)if(i.equalsEpsilon(e[r],t,We.CesiumMath.EPSILON12))return r;return-1}var Ke=new Oe.Cartographic,Qe=new Oe.Cartesian3,Xe=new Oe.Cartesian3,Ze=new Oe.Cartesian3,$e=new Ve.Matrix4;function et(e,t,i,a,r,n,o,s,u,c){for(var h=o.length,d=0;d<h;++d){var l=o[d],g=l.cartographic,m=l.index,p=e.length,f=g.longitude,I=g.latitude;I=We.CesiumMath.clamp(I,-We.CesiumMath.PI_OVER_TWO,We.CesiumMath.PI_OVER_TWO);var v=g.height-n.skirtHeight;n.hMin=Math.min(n.hMin,v),Oe.Cartographic.fromRadians(f,I,v,Ke),u&&(Ke.longitude+=s),u?d===h-1?Ke.latitude+=c:0===d&&(Ke.latitude-=c):Ke.latitude+=s;var E=n.ellipsoid.cartographicToCartesian(Ke);e.push(E),t.push(v),i.push(Oe.Cartesian2.clone(i[m])),0<a.length&&a.push(a[m]),Ve.Matrix4.multiplyByPoint(n.toENU,E,Qe);var T=n.minimum,C=n.maximum;Oe.Cartesian3.minimumByComponent(Qe,T,T),Oe.Cartesian3.maximumByComponent(Qe,C,C);var M=n.lastBorderPoint;if(Fe.defined(M)){var N=M.index;r.push(N,p-1,p,p,m,N)}n.lastBorderPoint=l}}return h(function(e,t){e.ellipsoid=Oe.Ellipsoid.clone(e.ellipsoid),e.rectangle=Oe.Rectangle.clone(e.rectangle);var i=function(e,t,i,a,r,n,o,s,u,c){var h,d,l,g,m,p;p=Fe.defined(a)?(h=a.west,d=a.south,l=a.east,g=a.north,m=a.width,a.height):(h=We.CesiumMath.toRadians(r.west),d=We.CesiumMath.toRadians(r.south),l=We.CesiumMath.toRadians(r.east),g=We.CesiumMath.toRadians(r.north),m=We.CesiumMath.toRadians(a.width),We.CesiumMath.toRadians(a.height));var f,I,v=[d,g],E=[h,l],T=Ve.Transforms.eastNorthUpToFixedFrame(t,i),C=Ve.Matrix4.inverseTransformation(T,$e);s&&(f=ke.WebMercatorProjection.geodeticLatitudeToMercatorAngle(d),I=1/(ke.WebMercatorProjection.geodeticLatitudeToMercatorAngle(g)-f));var M=new DataView(e),N=Number.POSITIVE_INFINITY,x=Number.NEGATIVE_INFINITY,b=Xe;b.x=Number.POSITIVE_INFINITY,b.y=Number.POSITIVE_INFINITY,b.z=Number.POSITIVE_INFINITY;var P=Ze;P.x=Number.NEGATIVE_INFINITY,P.y=Number.NEGATIVE_INFINITY,P.z=Number.NEGATIVE_INFINITY;var S,w,B=0,y=0,A=0;for(w=0;w<4;++w){var R=B;S=M.getUint32(R,!0),R+=Ge;var _=We.CesiumMath.toRadians(180*M.getFloat64(R,!0));R+=qe,-1===Je(E,_)&&E.push(_);var F=We.CesiumMath.toRadians(180*M.getFloat64(R,!0));R+=qe,-1===Je(v,F)&&v.push(F),R+=2*qe;var W=M.getInt32(R,!0);R+=De,y+=W,W=M.getInt32(R,!0),A+=3*W,B+=S+Ge}var O=[],V=[],Y=new Array(y),k=new Array(y),U=new Array(y),H=s?new Array(y):[],L=new Array(A),j=[],D=[],G=[],z=[],q=0,J=0;for(w=B=0;w<4;++w){S=M.getUint32(B,!0);var K=B+=Ge,Q=We.CesiumMath.toRadians(180*M.getFloat64(B,!0));B+=qe;var X=We.CesiumMath.toRadians(180*M.getFloat64(B,!0));B+=qe;var Z=We.CesiumMath.toRadians(180*M.getFloat64(B,!0)),$=.5*Z;B+=qe;var ee=We.CesiumMath.toRadians(180*M.getFloat64(B,!0)),te=.5*ee;B+=qe;var ie=M.getInt32(B,!0);B+=De;var ae=M.getInt32(B,!0);B+=De,B+=De;for(var re=new Array(ie),ne=0;ne<ie;++ne){var oe=Q+M.getUint8(B++)*Z;Ke.longitude=oe;var se=X+M.getUint8(B++)*ee;Ke.latitude=se;var ue=M.getFloat32(B,!0);if(B+=ze,0!==ue&&ue<c&&(ue*=-Math.pow(2,u)),ue*=6371010*n,Ke.height=ue,-1!==Je(E,oe)||-1!==Je(v,se)){var ce=Je(O,Ke,Oe.Cartographic);if(-1!==ce){re[ne]=V[ce];continue}O.push(Oe.Cartographic.clone(Ke)),V.push(q)}re[ne]=q,Math.abs(oe-h)<$?j.push({index:q,cartographic:Oe.Cartographic.clone(Ke)}):Math.abs(oe-l)<$?G.push({index:q,cartographic:Oe.Cartographic.clone(Ke)}):Math.abs(se-d)<te?D.push({index:q,cartographic:Oe.Cartographic.clone(Ke)}):Math.abs(se-g)<te&&z.push({index:q,cartographic:Oe.Cartographic.clone(Ke)}),N=Math.min(ue,N),x=Math.max(ue,x),U[q]=ue;var he=i.cartographicToCartesian(Ke);Y[q]=he,s&&(H[q]=(ke.WebMercatorProjection.geodeticLatitudeToMercatorAngle(se)-f)*I),Ve.Matrix4.multiplyByPoint(C,he,Qe),Oe.Cartesian3.minimumByComponent(Qe,b,b),Oe.Cartesian3.maximumByComponent(Qe,P,P);var de=(oe-h)/(l-h);de=We.CesiumMath.clamp(de,0,1);var le=(se-d)/(g-d);le=We.CesiumMath.clamp(le,0,1),k[q]=new Oe.Cartesian2(de,le),++q}for(var ge=3*ae,me=0;me<ge;++me,++J)L[J]=re[M.getUint16(B,!0)],B+=je;if(S!==B-K)throw new Ye.RuntimeError("Invalid terrain tile.")}Y.length=q,k.length=q,U.length=q,s&&(H.length=q);var pe=q,fe=J,Ie={hMin:N,lastBorderPoint:void 0,skirtHeight:o,toENU:C,ellipsoid:i,minimum:b,maximum:P};j.sort(function(e,t){return t.cartographic.latitude-e.cartographic.latitude}),D.sort(function(e,t){return e.cartographic.longitude-t.cartographic.longitude}),G.sort(function(e,t){return e.cartographic.latitude-t.cartographic.latitude}),z.sort(function(e,t){return t.cartographic.longitude-e.cartographic.longitude});var ve=1e-5;if(et(Y,U,k,H,L,Ie,j,-ve*m,!0,-ve*p),et(Y,U,k,H,L,Ie,D,-ve*p,!1),et(Y,U,k,H,L,Ie,G,ve*m,!0,ve*p),et(Y,U,k,H,L,Ie,z,ve*p,!1),0<j.length&&0<z.length){var Ee=j[0].index,Te=z[z.length-1].index,Ce=Y.length-1;L.push(Te,Ce,pe,pe,Ee,Te)}y=Y.length;var Me,Ne=Ve.BoundingSphere.fromPoints(Y);Fe.defined(a)&&(Me=He.OrientedBoundingBox.fromRectangle(a,N,x,i));for(var xe=new Le.EllipsoidalOccluder(i).computeHorizonCullingPointPossiblyUnderEllipsoid(t,Y,N),be=new Ue.AxisAlignedBoundingBox(b,P,t),Pe=new Le.TerrainEncoding(be,Ie.hMin,x,T,!1,s),Se=new Float32Array(y*Pe.getStride()),we=0,Be=0;Be<y;++Be)we=Pe.encode(Se,we,Y[Be],k[Be],U[Be],void 0,H[Be]);var ye=j.map(function(e){return e.index}).reverse(),Ae=D.map(function(e){return e.index}).reverse(),Re=G.map(function(e){return e.index}).reverse(),_e=z.map(function(e){return e.index}).reverse();return Ae.unshift(Re[Re.length-1]),Ae.push(ye[0]),_e.unshift(ye[ye.length-1]),_e.push(Re[0]),{vertices:Se,indices:new Uint16Array(L),maximumHeight:x,minimumHeight:N,encoding:Pe,boundingSphere3D:Ne,orientedBoundingBox:Me,occludeePointInScaledSpace:xe,vertexCountWithoutSkirts:pe,skirtIndex:fe,westIndicesSouthToNorth:ye,southIndicesEastToWest:Ae,eastIndicesNorthToSouth:Re,northIndicesWestToEast:_e}}(e.buffer,e.relativeToCenter,e.ellipsoid,e.rectangle,e.nativeRectangle,e.exaggeration,e.skirtHeight,e.includeWebMercatorT,e.negativeAltitudeExponentBias,e.negativeElevationThreshold),a=i.vertices;t.push(a.buffer);var r=i.indices;return t.push(r.buffer),{vertices:a.buffer,indices:r.buffer,numberOfAttributes:i.encoding.getStride(),minimumHeight:i.minimumHeight,maximumHeight:i.maximumHeight,boundingSphere3D:i.boundingSphere3D,orientedBoundingBox:i.orientedBoundingBox,occludeePointInScaledSpace:i.occludeePointInScaledSpace,encoding:i.encoding,vertexCountWithoutSkirts:i.vertexCountWithoutSkirts,skirtIndex:i.skirtIndex,westIndicesSouthToNorth:i.westIndicesSouthToNorth,southIndicesEastToWest:i.southIndicesEastToWest,eastIndicesNorthToSouth:i.eastIndicesNorthToSouth,northIndicesWestToEast:i.northIndicesWestToEast}})});
